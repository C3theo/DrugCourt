# Generated by Django 2.1.8 on 2019-06-03 16:51

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Appinfo',
            fields=[
                ('orgname', models.CharField(db_column='OrgName', max_length=50, primary_key=True, serialize=False)),
                ('apppath', models.CharField(blank=True, db_column='AppPath', max_length=75, null=True)),
                ('photopath', models.CharField(blank=True, db_column='PhotoPath', max_length=75, null=True)),
                ('track', models.CharField(blank=True, db_column='Track', max_length=1, null=True)),
                ('site', models.CharField(blank=True, db_column='Site', max_length=40, null=True)),
                ('datastart', models.DateTimeField(blank=True, db_column='DataStart', null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=50, null=True)),
                ('judge', models.CharField(blank=True, db_column='Judge', max_length=50, null=True)),
                ('coordinator', models.CharField(blank=True, db_column='Coordinator', max_length=50, null=True)),
                ('docpath', models.CharField(blank=True, db_column='DocPath', max_length=125, null=True)),
            ],
            options={
                'db_table': 'AppInfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Approles',
            fields=[
                ('roleid', models.AutoField(db_column='RoleID', primary_key=True, serialize=False)),
                ('roletitle', models.CharField(blank=True, db_column='RoleTitle', max_length=30, null=True)),
                ('disciplineid', models.IntegerField(blank=True, db_column='DisciplineID', null=True)),
            ],
            options={
                'db_table': 'AppRoles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Assessments',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('clientid', models.CharField(db_column='ClientID', max_length=15)),
                ('assessdate', models.DateField(blank=True, db_column='AssessDate', null=True)),
                ('assessscore', models.IntegerField(blank=True, db_column='AssessScore', null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=15, null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
                ('assesstool', models.CharField(blank=True, db_column='AssessTool', max_length=50, null=True)),
            ],
            options={
                'db_table': 'Assessments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Attorneys',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('attorneyname', models.CharField(db_column='AttorneyName', max_length=55)),
                ('attorneytype', models.CharField(blank=True, db_column='AttorneyType', max_length=50, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=75, null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=12, null=True)),
                ('active', models.BooleanField(blank=True, db_column='Active', null=True)),
            ],
            options={
                'db_table': 'Attorneys',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Casenums',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('casenum', models.CharField(db_column='CaseNum', max_length=11)),
                ('clientid', models.CharField(db_column='ClientID', max_length=15)),
                ('charges', models.CharField(blank=True, db_column='Charges', max_length=255, null=True)),
                ('arrestdate', models.DateTimeField(blank=True, db_column='ArrestDate', null=True)),
                ('dispositiondate', models.DateTimeField(blank=True, db_column='DispositionDate', null=True)),
                ('disposition', models.CharField(blank=True, db_column='Disposition', max_length=200, null=True)),
                ('division', models.IntegerField(blank=True, db_column='Division', null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=15, null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
            ],
            options={
                'db_table': 'CaseNums',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Children',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('clientid', models.CharField(db_column='ClientID', max_length=15)),
                ('childgender', models.CharField(db_column='ChildGender', max_length=50)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=50, null=True)),
                ('childdob', models.DateTimeField(blank=True, db_column='ChildDOB', null=True)),
                ('age', models.CharField(blank=True, db_column='Age', max_length=8, null=True)),
                ('contact', models.CharField(blank=True, db_column='Contact', max_length=50, null=True)),
                ('custody', models.CharField(blank=True, db_column='Custody', max_length=50, null=True)),
                ('cpscase', models.CharField(blank=True, db_column='CPSCase', max_length=50, null=True)),
                ('home', models.CharField(blank=True, db_column='Home', max_length=50, null=True)),
                ('otherhome', models.CharField(blank=True, db_column='OtherHome', max_length=50, null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=25, null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
            ],
            options={
                'db_table': 'Children',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Chroniccond',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('clientid', models.CharField(db_column='ClientID', max_length=15)),
                ('condition', models.CharField(blank=True, db_column='Condition', max_length=100, null=True)),
                ('diagnosis', models.TextField(blank=True, db_column='Diagnosis', null=True)),
                ('physician', models.CharField(blank=True, db_column='Physician', max_length=50, null=True)),
                ('userid', models.CharField(blank=True, db_column='userID', max_length=10, null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
                ('ssma_timestamp', models.TextField(db_column='SSMA_TimeStamp')),
            ],
            options={
                'db_table': 'ChronicCond',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Clientaddress',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('clientid', models.CharField(db_column='ClientID', max_length=15)),
                ('activedate', models.DateTimeField(db_column='Activedate')),
                ('residencetype', models.CharField(db_column='ResidenceType', max_length=25)),
                ('address1', models.CharField(blank=True, db_column='Address1', max_length=75, null=True)),
                ('address2', models.CharField(blank=True, db_column='Address2', max_length=75, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=25, null=True)),
                ('state', models.CharField(blank=True, db_column='State', max_length=3, null=True)),
                ('zip', models.CharField(blank=True, db_column='Zip', max_length=10, null=True)),
                ('homephone', models.CharField(blank=True, db_column='HomePhone', max_length=14, null=True)),
                ('contact', models.CharField(blank=True, db_column='Contact', max_length=20, null=True)),
                ('payment', models.DecimalField(blank=True, decimal_places=4, max_digits=19, null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=25, null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
            ],
            options={
                'db_table': 'ClientAddress',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Clientcontacts',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('clientid', models.CharField(db_column='ClientID', max_length=15)),
                ('clientrelationship', models.CharField(db_column='ClientRelationship', max_length=20)),
                ('contactname', models.CharField(db_column='ContactName', max_length=20)),
                ('contactphone1', models.CharField(blank=True, db_column='ContactPhone1', max_length=12, null=True)),
                ('contactphone2', models.CharField(blank=True, db_column='ContactPhone2', max_length=10, null=True)),
                ('contactaddress', models.CharField(blank=True, db_column='ContactAddress', max_length=255, null=True)),
                ('contactcitystatezip', models.CharField(blank=True, db_column='ContactCityStateZip', max_length=50, null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=25, null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
            ],
            options={
                'db_table': 'ClientContacts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Clientdocs',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('clientid', models.CharField(db_column='ClientID', max_length=15)),
                ('doctype', models.CharField(db_column='DocType', max_length=25)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=50, null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
                ('docname', models.CharField(blank=True, db_column='DocName', max_length=100, null=True)),
                ('docdate', models.DateField(blank=True, db_column='DocDate', null=True)),
                ('doclink', models.CharField(blank=True, db_column='DocLink', max_length=150, null=True)),
                ('docnote', models.CharField(blank=True, db_column='DocNote', max_length=100, null=True)),
            ],
            options={
                'db_table': 'ClientDocs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Clientlog',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('clientid', models.CharField(db_column='ClientID', max_length=15)),
                ('changedate', models.DateTimeField(db_column='ChangeDate')),
                ('changefield', models.CharField(db_column='ChangeField', max_length=255)),
                ('changeinfo', models.CharField(db_column='ChangeInfo', max_length=255)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=25, null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
            ],
            options={
                'db_table': 'ClientLog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Clientphase',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('clientid', models.CharField(db_column='ClientID', max_length=15)),
                ('phase', models.CharField(db_column='Phase', max_length=1)),
                ('phasestart', models.DateTimeField(db_column='PhaseStart')),
                ('phaseend', models.DateTimeField(blank=True, db_column='PhaseEnd', null=True)),
                ('completed', models.BooleanField(blank=True, null=True)),
                ('totaldays', models.IntegerField(blank=True, db_column='TotalDays', null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=25, null=True)),
                ('ssma_timestamp', models.TextField(db_column='SSMA_TimeStamp')),
            ],
            options={
                'db_table': 'ClientPhase',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Clients',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('clientid', models.CharField(db_column='ClientID', max_length=15, unique=True)),
                ('startdate', models.DateField(blank=True, db_column='StartDate', null=True)),
                ('dischargedate', models.DateField(blank=True, db_column='DischargeDate', null=True)),
                ('cellphone', models.CharField(blank=True, db_column='CellPhone', max_length=50, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=75, null=True)),
                ('message', models.CharField(blank=True, db_column='Message', max_length=50, null=True)),
                ('messagesource', models.CharField(blank=True, db_column='MessageSource', max_length=50, null=True)),
                ('yearlyincome', models.CharField(blank=True, db_column='YearlyIncome', max_length=20, null=True)),
                ('incomesource', models.CharField(blank=True, db_column='IncomeSource', max_length=25, null=True)),
                ('educationyrs', models.IntegerField(blank=True, db_column='EducationYrs', null=True)),
                ('educationlevel', models.CharField(blank=True, db_column='EducationLevel', max_length=50, null=True)),
                ('highschoolgrad', models.CharField(blank=True, db_column='HighSchoolGrad', max_length=3, null=True)),
                ('ged', models.CharField(blank=True, db_column='GED', max_length=3, null=True)),
                ('militaryservice', models.BooleanField(db_column='MilitaryService')),
                ('vaeligible', models.BooleanField(db_column='VAEligible')),
                ('maritalstatus', models.CharField(blank=True, db_column='MaritalStatus', max_length=20, null=True)),
                ('pregnant', models.CharField(blank=True, db_column='Pregnant', max_length=5, null=True)),
                ('children', models.CharField(blank=True, db_column='Children', max_length=12, null=True)),
                ('childnarrative', models.TextField(blank=True, db_column='ChildNarrative', null=True)),
                ('diagnosis', models.TextField(blank=True, db_column='Diagnosis', null=True)),
                ('suicide', models.BooleanField(db_column='Suicide')),
                ('violence', models.BooleanField(db_column='Violence')),
                ('health', models.TextField(blank=True, db_column='Health', null=True)),
                ('ghmedications', models.TextField(blank=True, db_column='GhMedications', null=True)),
                ('prenatal', models.TextField(blank=True, db_column='Prenatal', null=True)),
                ('tbstatus', models.CharField(blank=True, db_column='TBStatus', max_length=50, null=True)),
                ('physicalabuse', models.BooleanField(db_column='PhysicalAbuse')),
                ('sexualabuse', models.BooleanField(db_column='SexualAbuse')),
                ('insurance', models.CharField(blank=True, db_column='Insurance', max_length=50, null=True)),
                ('primarydrug', models.CharField(blank=True, db_column='PrimaryDrug', max_length=50, null=True)),
                ('substanceuse', models.CharField(blank=True, db_column='SubstanceUse', max_length=6, null=True)),
                ('sobriety', models.CharField(blank=True, db_column='Sobriety', max_length=50, null=True)),
                ('needleuse', models.BooleanField(db_column='NeedleUse')),
                ('addictionseverityindex', models.CharField(blank=True, db_column='AddictionSeverityIndex', max_length=50, null=True)),
                ('familyoforiginyn', models.BooleanField(db_column='FamilyofOriginYN')),
                ('familyoforiginuse', models.CharField(blank=True, db_column='FamilyofOriginUse', max_length=250, null=True)),
                ('spouseuseyn', models.BooleanField(db_column='SpouseUseYN')),
                ('spouseuse', models.CharField(blank=True, db_column='SpouseUse', max_length=250, null=True)),
                ('testtype', models.CharField(blank=True, db_column='TestType', max_length=50, null=True)),
                ('testresults', models.CharField(blank=True, db_column='TestResults', max_length=250, null=True)),
                ('employedatgraduation', models.BooleanField(blank=True, db_column='EmployedAtGraduation', null=True)),
                ('outcomecomments', models.TextField(blank=True, db_column='OutcomeComments', null=True)),
                ('cmuserid', models.CharField(blank=True, db_column='CMUserID', max_length=50, null=True)),
                ('couserid', models.CharField(blank=True, db_column='COUserID', max_length=50, null=True)),
                ('phase', models.CharField(blank=True, db_column='Phase', max_length=1, null=True)),
                ('stopbilling', models.BooleanField(blank=True, db_column='StopBilling', null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=50, null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
                ('ssma_timestamp', models.TextField(db_column='SSMA_TimeStamp')),
                ('lastpositive', models.DateField(blank=True, db_column='LastPositive', null=True)),
                ('lep', models.IntegerField(blank=True, db_column='LEP', null=True)),
                ('employedatstart', models.CharField(blank=True, db_column='EmployedAtStart', max_length=12, null=True)),
                ('employedatgrad', models.CharField(blank=True, db_column='EmployedAtGrad', max_length=12, null=True)),
                ('asam_loc', models.DecimalField(blank=True, db_column='ASAM_LOC', decimal_places=1, max_digits=2, null=True)),
            ],
            options={
                'verbose_name_plural': 'clients',
                'db_table': 'Clients',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Court',
            fields=[
                ('courtid', models.AutoField(db_column='CourtID', primary_key=True, serialize=False)),
                ('clientid', models.CharField(db_column='ClientID', max_length=15)),
                ('courtdate', models.DateTimeField(db_column='CourtDate')),
                ('event', models.CharField(blank=True, db_column='Event', max_length=50, null=True)),
                ('courtdatetype', models.CharField(blank=True, db_column='CourtDateType', max_length=10, null=True)),
                ('phase', models.CharField(blank=True, db_column='Phase', max_length=1, null=True)),
                ('attendance', models.CharField(blank=True, db_column='Attendance', max_length=50, null=True)),
                ('comments', models.TextField(blank=True, db_column='Comments', null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=15, null=True)),
                ('ssma_timestamp', models.TextField(db_column='SSMA_TimeStamp')),
            ],
            options={
                'db_table': 'Court',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Crimhistory',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('clientid', models.CharField(db_column='ClientID', max_length=15)),
                ('charge', models.CharField(blank=True, db_column='Charge', max_length=50, null=True)),
                ('chargetype', models.CharField(blank=True, db_column='ChargeType', max_length=15, null=True)),
                ('penalcode', models.CharField(blank=True, db_column='PenalCode', max_length=30, null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=50, null=True)),
                ('chargedate', models.DateTimeField(blank=True, db_column='ChargeDate', null=True)),
                ('chargenote', models.CharField(blank=True, db_column='ChargeNote', max_length=150, null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=25, null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
            ],
            options={
                'db_table': 'CrimHistory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cs',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('clientid', models.CharField(db_column='ClientID', max_length=15)),
                ('csdate', models.DateTimeField(db_column='CSDate')),
                ('csassignment', models.CharField(blank=True, db_column='CSAssignment', max_length=50, null=True)),
                ('cshours', models.SmallIntegerField(db_column='CSHours')),
                ('csverifiedby', models.CharField(blank=True, db_column='CSVerifiedBy', max_length=50, null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=25, null=True)),
            ],
            options={
                'db_table': 'CS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('cntdate', models.DateTimeField(blank=True, db_column='CntDate', null=True)),
                ('track', models.CharField(blank=True, db_column='Track', max_length=1, null=True)),
                ('site', models.CharField(db_column='Site', max_length=40)),
                ('cntpending', models.IntegerField(blank=True, db_column='CntPending', null=True)),
                ('cntactive', models.IntegerField(blank=True, db_column='CntActive', null=True)),
                ('cntawol', models.IntegerField(blank=True, db_column='CntAWOL', null=True)),
                ('cntpendingterm', models.IntegerField(blank=True, db_column='CntPendingTerm', null=True)),
                ('cntincustody', models.IntegerField(blank=True, db_column='CntInCustody', null=True)),
                ('cntmedicalleave', models.IntegerField(blank=True, db_column='CntMedicalLeave', null=True)),
                ('cntpositivescreens', models.IntegerField(blank=True, db_column='CntPositiveScreens', null=True)),
                ('cntoverinphase', models.IntegerField(blank=True, db_column='CntOverInPhase', null=True)),
                ('cntphalert', models.IntegerField(blank=True, db_column='CntPhAlert', null=True)),
                ('cntfeesalert', models.IntegerField(blank=True, db_column='CntFeesAlert', null=True)),
                ('cntstepup', models.IntegerField(blank=True, db_column='CntStepUp', null=True)),
                ('cntproposals', models.IntegerField(blank=True, db_column='CntProposals', null=True)),
                ('cnt12step', models.IntegerField(blank=True, db_column='Cnt12Step', null=True)),
                ('cntnrd', models.IntegerField(blank=True, db_column='CntNRD', null=True)),
                ('cntsessions', models.IntegerField(blank=True, db_column='CntSessions', null=True)),
                ('cntobjectivesdue', models.IntegerField(blank=True, db_column='CntObjectivesDue', null=True)),
                ('cntratingsdue', models.IntegerField(blank=True, db_column='CntRatingsDue', null=True)),
                ('cntnotesdue', models.IntegerField(blank=True, db_column='CntNotesDue', null=True)),
                ('cntcourtdates', models.IntegerField(blank=True, db_column='CntCourtDates', null=True)),
                ('cntbilling', models.IntegerField(blank=True, db_column='CntBilling', null=True)),
                ('cntpayments', models.IntegerField(blank=True, db_column='CntPayments', null=True)),
                ('cnttxattendance', models.IntegerField(blank=True, db_column='CntTxAttendance', null=True)),
                ('cntscreens', models.IntegerField(blank=True, db_column='CntScreens', null=True)),
            ],
            options={
                'db_table': 'Dashboard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dblog',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('logdate', models.DateField(blank=True, db_column='LogDate', null=True)),
                ('track', models.CharField(blank=True, db_column='Track', max_length=1, null=True)),
                ('cntpending', models.IntegerField(blank=True, db_column='CntPending', null=True)),
                ('cntactive', models.IntegerField(blank=True, db_column='CntActive', null=True)),
                ('cntawol', models.IntegerField(blank=True, db_column='CntAWOL', null=True)),
                ('cntpendingterm', models.IntegerField(blank=True, db_column='CntPendingTerm', null=True)),
                ('cntincustody', models.IntegerField(blank=True, db_column='CntInCustody', null=True)),
                ('cntmedicalleave', models.IntegerField(blank=True, db_column='CntMedicalLeave', null=True)),
                ('cntpositivescreens', models.IntegerField(blank=True, db_column='CntPositiveScreens', null=True)),
                ('cntoverinphase', models.IntegerField(blank=True, db_column='CntOverInPhase', null=True)),
                ('cntphalert', models.IntegerField(blank=True, db_column='CntPhAlert', null=True)),
                ('cntfeesalert', models.IntegerField(blank=True, db_column='CntFeesAlert', null=True)),
                ('cntstepup', models.IntegerField(blank=True, db_column='CntStepUp', null=True)),
                ('cntproposals', models.IntegerField(blank=True, db_column='CntProposals', null=True)),
                ('cnt12step', models.IntegerField(blank=True, db_column='Cnt12Step', null=True)),
                ('cntnrd', models.IntegerField(blank=True, db_column='CntNRD', null=True)),
                ('cntsessions', models.IntegerField(blank=True, db_column='CntSessions', null=True)),
                ('cntobjectivesdue', models.IntegerField(blank=True, db_column='CntObjectivesDue', null=True)),
                ('cntratingsdue', models.IntegerField(blank=True, db_column='CntRatingsDue', null=True)),
                ('cntnotesdue', models.IntegerField(blank=True, db_column='CntNotesDue', null=True)),
                ('cntcourtdates', models.IntegerField(blank=True, db_column='CntCourtDates', null=True)),
            ],
            options={
                'db_table': 'DBLog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Debts',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('clientid', models.CharField(db_column='ClientID', max_length=15)),
                ('debttype', models.CharField(blank=True, db_column='DebtType', max_length=15, null=True)),
                ('debtdate', models.DateTimeField(blank=True, db_column='DebtDate', null=True)),
                ('debtamount', models.DecimalField(blank=True, db_column='DebtAmount', decimal_places=4, max_digits=19, null=True)),
                ('debtbalance', models.DecimalField(blank=True, db_column='DebtBalance', decimal_places=4, max_digits=19, null=True)),
                ('statuscode', models.CharField(blank=True, db_column='StatusCode', max_length=15, null=True)),
                ('comment', models.TextField(blank=True, db_column='Comment', null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=20, null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
                ('ssma_timestamp', models.TextField(db_column='SSMA_TimeStamp')),
            ],
            options={
                'db_table': 'Debts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Debttype',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('debttype', models.CharField(blank=True, db_column='DebtType', max_length=15, null=True)),
                ('sort', models.CharField(blank=True, db_column='Sort', max_length=1, null=True)),
            ],
            options={
                'db_table': 'DebtType',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Demographics',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('createdate', models.DateField(blank=True, db_column='CreateDate', null=True)),
                ('white_m', models.IntegerField(blank=True, db_column='White_M', null=True)),
                ('white_f', models.IntegerField(blank=True, db_column='White_F', null=True)),
                ('white_t', models.IntegerField(blank=True, db_column='White_T', null=True)),
                ('amindianalaskan_m', models.IntegerField(blank=True, db_column='AmIndianAlaskan_M', null=True)),
                ('amindianalaskan_f', models.IntegerField(blank=True, db_column='AmIndianAlaskan_F', null=True)),
                ('amindianalaskan_t', models.IntegerField(blank=True, db_column='AmIndianAlaskan_T', null=True)),
                ('asian_m', models.IntegerField(blank=True, db_column='Asian_M', null=True)),
                ('asian_f', models.IntegerField(blank=True, db_column='Asian_F', null=True)),
                ('asian_t', models.IntegerField(blank=True, db_column='Asian_T', null=True)),
                ('black_m', models.IntegerField(blank=True, db_column='Black_M', null=True)),
                ('black_f', models.IntegerField(blank=True, db_column='Black_F', null=True)),
                ('black_t', models.IntegerField(blank=True, db_column='Black_T', null=True)),
                ('hispanic_m', models.IntegerField(blank=True, db_column='Hispanic_M', null=True)),
                ('hispanic_f', models.IntegerField(blank=True, db_column='Hispanic_F', null=True)),
                ('hispanic_t', models.IntegerField(blank=True, db_column='Hispanic_T', null=True)),
                ('mideast_m', models.IntegerField(blank=True, db_column='MidEast_M', null=True)),
                ('mideast_f', models.IntegerField(blank=True, db_column='MidEast_F', null=True)),
                ('mideast_t', models.IntegerField(blank=True, db_column='MidEast_T', null=True)),
                ('hawaiian_m', models.IntegerField(blank=True, db_column='Hawaiian_M', null=True)),
                ('hawaiian_f', models.IntegerField(blank=True, db_column='Hawaiian_F', null=True)),
                ('hawaiian_t', models.IntegerField(blank=True, db_column='Hawaiian_T', null=True)),
                ('other_m', models.IntegerField(blank=True, db_column='Other_M', null=True)),
                ('other_f', models.IntegerField(blank=True, db_column='Other_F', null=True)),
                ('other_t', models.IntegerField(blank=True, db_column='Other_T', null=True)),
                ('twoormore_m', models.IntegerField(blank=True, db_column='TwoOrMore_M', null=True)),
                ('twoormore_f', models.IntegerField(blank=True, db_column='TwoOrMore_F', null=True)),
                ('twoormore_t', models.IntegerField(blank=True, db_column='TwoOrMore_T', null=True)),
                ('elementary', models.IntegerField(blank=True, db_column='Elementary', null=True)),
                ('middleschool', models.IntegerField(blank=True, db_column='MiddleSchool', null=True)),
                ('somehighschool', models.IntegerField(blank=True, db_column='SomeHighSchool', null=True)),
                ('highschoolged', models.IntegerField(blank=True, db_column='HighSchoolGED', null=True)),
                ('somecollege', models.IntegerField(blank=True, db_column='SomeCollege', null=True)),
                ('associate', models.IntegerField(blank=True, db_column='Associate', null=True)),
                ('bachelor', models.IntegerField(blank=True, db_column='Bachelor', null=True)),
                ('graduate', models.IntegerField(blank=True, db_column='Graduate', null=True)),
                ('lep', models.IntegerField(blank=True, db_column='LEP', null=True)),
                ('number_11andunder_m', models.IntegerField(blank=True, db_column='11andUnder_M', null=True)),
                ('number_11andunder_f', models.IntegerField(blank=True, db_column='11andUnder_F', null=True)),
                ('number_11andunder_t', models.IntegerField(blank=True, db_column='11andUnder_T', null=True)),
                ('number_12to17_m', models.IntegerField(blank=True, db_column='12to17_M', null=True)),
                ('number_12to17_f', models.IntegerField(blank=True, db_column='12to17_F', null=True)),
                ('number_12to17_t', models.IntegerField(blank=True, db_column='12to17_T', null=True)),
                ('number_18to20_m', models.IntegerField(blank=True, db_column='18to20_M', null=True)),
                ('number_18to20_f', models.IntegerField(blank=True, db_column='18to20_F', null=True)),
                ('number_18to20_t', models.IntegerField(blank=True, db_column='18to20_T', null=True)),
                ('number_21to25_m', models.IntegerField(blank=True, db_column='21to25_M', null=True)),
                ('number_21to25_f', models.IntegerField(blank=True, db_column='21to25_F', null=True)),
                ('number_21to25_t', models.IntegerField(blank=True, db_column='21to25_T', null=True)),
                ('number_26to35_m', models.IntegerField(blank=True, db_column='26to35_M', null=True)),
                ('number_26to35_f', models.IntegerField(blank=True, db_column='26to35_F', null=True)),
                ('number_26to35_t', models.IntegerField(blank=True, db_column='26to35_T', null=True)),
                ('number_36to45_m', models.IntegerField(blank=True, db_column='36to45_M', null=True)),
                ('number_36to45_f', models.IntegerField(blank=True, db_column='36to45_F', null=True)),
                ('number_36to45_t', models.IntegerField(blank=True, db_column='36to45_T', null=True)),
                ('number_46to55_m', models.IntegerField(blank=True, db_column='46to55_M', null=True)),
                ('number_46to55_f', models.IntegerField(blank=True, db_column='46to55_F', null=True)),
                ('number_46to55_t', models.IntegerField(blank=True, db_column='46to55_T', null=True)),
                ('number_56to65_m', models.IntegerField(blank=True, db_column='56to65_M', null=True)),
                ('number_56to65_f', models.IntegerField(blank=True, db_column='56to65_F', null=True)),
                ('number_56to65_t', models.IntegerField(blank=True, db_column='56to65_T', null=True)),
                ('number_66orolder_m', models.IntegerField(blank=True, db_column='66orOlder_M', null=True)),
                ('number_66orolder_f', models.IntegerField(blank=True, db_column='66orOlder_F', null=True)),
                ('number_66orolder_t', models.IntegerField(blank=True, db_column='66orOlder_T', null=True)),
                ('gradunandem', models.IntegerField(blank=True, db_column='GradUnandEm', null=True)),
                ('gradunandun', models.IntegerField(blank=True, db_column='GradUnandUn', null=True)),
                ('grademandun', models.IntegerField(blank=True, db_column='GradEmandUn', null=True)),
                ('grademandem', models.IntegerField(blank=True, db_column='GradEmandEm', null=True)),
                ('married', models.IntegerField(blank=True, db_column='Married', null=True)),
                ('commonlaw', models.IntegerField(blank=True, db_column='CommonLaw', null=True)),
                ('separated', models.IntegerField(blank=True, db_column='Separated', null=True)),
                ('divorced', models.IntegerField(blank=True, db_column='Divorced', null=True)),
                ('widowed', models.IntegerField(blank=True, db_column='Widowed', null=True)),
                ('single', models.IntegerField(blank=True, db_column='Single', null=True)),
                ('noincome', models.IntegerField(blank=True, db_column='NoIncome', null=True)),
                ('under999', models.IntegerField(blank=True, db_column='Under999', null=True)),
                ('number_1kto4999', models.IntegerField(blank=True, db_column='1Kto4999', null=True)),
                ('number_5kto9999', models.IntegerField(blank=True, db_column='5Kto9999', null=True)),
                ('number_15kto19999', models.IntegerField(blank=True, db_column='15Kto19999', null=True)),
                ('number_20kto34999', models.IntegerField(blank=True, db_column='20Kto34999', null=True)),
                ('number_35kto44999', models.IntegerField(blank=True, db_column='35Kto44999', null=True)),
                ('number_45kto54999', models.IntegerField(blank=True, db_column='45Kto54999', null=True)),
                ('number_55kto64999', models.IntegerField(blank=True, db_column='55Kto64999', null=True)),
                ('number_65kto74999', models.IntegerField(blank=True, db_column='65Kto74999', null=True)),
                ('number_75korhigher', models.IntegerField(blank=True, db_column='75KorHigher', null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
                ('datastart', models.DateTimeField(blank=True, db_column='DataStart', null=True)),
                ('dataend', models.DateTimeField(blank=True, db_column='DataEnd', null=True)),
                ('number_10kto14999', models.IntegerField(blank=True, db_column='10Kto14999', null=True)),
                ('totalactive', models.IntegerField(blank=True, db_column='TotalActive', null=True)),
                ('totalgrads', models.IntegerField(blank=True, db_column='TotalGrads', null=True)),
            ],
            options={
                'db_table': 'Demographics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Disciplines',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('discipline', models.CharField(blank=True, db_column='Discipline', max_length=15, null=True)),
            ],
            options={
                'db_table': 'Disciplines',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Drugtypes',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('drugtype', models.CharField(db_column='DrugType', max_length=50)),
            ],
            options={
                'db_table': 'DrugTypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Educationlevel',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('level', models.CharField(db_column='Level', max_length=50)),
            ],
            options={
                'db_table': 'EducationLevel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Employment',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('clientid', models.CharField(db_column='ClientID', max_length=15)),
                ('occupation', models.CharField(blank=True, db_column='Occupation', max_length=50, null=True)),
                ('employer', models.CharField(db_column='Employer', max_length=50)),
                ('contact', models.CharField(blank=True, db_column='Contact', max_length=25, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=50, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=25, null=True)),
                ('state', models.CharField(blank=True, db_column='State', max_length=2, null=True)),
                ('zip', models.CharField(blank=True, db_column='Zip', max_length=10, null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=12, null=True)),
                ('doh', models.DateTimeField(db_column='DOH')),
                ('dot', models.DateTimeField(blank=True, db_column='DOT', null=True)),
                ('income', models.DecimalField(blank=True, db_column='Income', decimal_places=4, max_digits=19, null=True)),
                ('hours', models.CharField(blank=True, db_column='Hours', max_length=10, null=True)),
                ('schedule', models.CharField(blank=True, db_column='Schedule', max_length=10, null=True)),
                ('payperiod', models.CharField(blank=True, db_column='PayPeriod', max_length=10, null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=25, null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
            ],
            options={
                'db_table': 'Employment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Fees',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('clientid', models.CharField(blank=True, db_column='ClientID', max_length=15, null=True)),
                ('amount', models.DecimalField(db_column='Amount', decimal_places=4, max_digits=19)),
                ('transdate', models.DateField(db_column='TransDate')),
                ('comments', models.CharField(db_column='Comments', max_length=50)),
                ('submitted', models.BooleanField(blank=True, db_column='Submitted', null=True)),
                ('submitdate', models.DateField(blank=True, db_column='SubmitDate', null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=25, null=True)),
                ('ssma_timestamp', models.TextField(db_column='SSMA_TimeStamp')),
            ],
            options={
                'db_table': 'Fees',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Frequency',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('frequency', models.CharField(blank=True, db_column='Frequency', max_length=20, null=True)),
                ('sort', models.IntegerField(blank=True, db_column='Sort', null=True)),
            ],
            options={
                'db_table': 'Frequency',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gacounty',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('countyname', models.CharField(blank=True, db_column='CountyName', max_length=50, null=True)),
            ],
            options={
                'db_table': 'GACounty',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Geninfo',
            fields=[
                ('activeparticipants', models.IntegerField(blank=True, db_column='ActiveParticipants', null=True)),
                ('reviewed', models.IntegerField(blank=True, db_column='Reviewed', null=True)),
                ('rejectedprior', models.IntegerField(blank=True, db_column='RejectedPrior', null=True)),
                ('declined', models.IntegerField(blank=True, db_column='Declined', null=True)),
                ('acceptedprepost', models.IntegerField(blank=True, db_column='AcceptedPrePost', null=True)),
                ('rejected2', models.IntegerField(blank=True, db_column='Rejected2', null=True)),
                ('rejected3', models.IntegerField(blank=True, db_column='Rejected3', null=True)),
                ('rejected4', models.IntegerField(blank=True, db_column='Rejected4', null=True)),
                ('county1', models.IntegerField(blank=True, db_column='County1', null=True)),
                ('county2', models.IntegerField(blank=True, db_column='County2', null=True)),
                ('county3', models.IntegerField(blank=True, db_column='County3', null=True)),
                ('county4', models.IntegerField(blank=True, db_column='County4', null=True)),
                ('county5', models.IntegerField(blank=True, db_column='County5', null=True)),
                ('county6', models.IntegerField(blank=True, db_column='County6', null=True)),
                ('county7', models.IntegerField(blank=True, db_column='County7', null=True)),
                ('county8', models.IntegerField(blank=True, db_column='County8', null=True)),
                ('county9', models.IntegerField(blank=True, db_column='County9', null=True)),
                ('county10', models.IntegerField(blank=True, db_column='County10', null=True)),
                ('cty1name', models.CharField(blank=True, db_column='Cty1Name', max_length=50, null=True)),
                ('cty2name', models.CharField(blank=True, db_column='Cty2Name', max_length=50, null=True)),
                ('cty3name', models.CharField(blank=True, db_column='Cty3Name', max_length=50, null=True)),
                ('cty4name', models.CharField(blank=True, db_column='Cty4Name', max_length=50, null=True)),
                ('cty5name', models.CharField(blank=True, db_column='Cty5Name', max_length=50, null=True)),
                ('cty6name', models.CharField(blank=True, db_column='Cty6Name', max_length=50, null=True)),
                ('cty7name', models.CharField(blank=True, db_column='Cty7Name', max_length=50, null=True)),
                ('cty8name', models.CharField(blank=True, db_column='Cty8Name', max_length=50, null=True)),
                ('cty9name', models.CharField(blank=True, db_column='Cty9Name', max_length=50, null=True)),
                ('cty10name', models.CharField(blank=True, db_column='Cty10Name', max_length=50, null=True)),
                ('termadmindischarge', models.IntegerField(blank=True, db_column='TermAdminDischarge', null=True)),
                ('termnoncompliance', models.IntegerField(blank=True, db_column='TermNonCompliance', null=True)),
                ('termdismissed', models.IntegerField(blank=True, db_column='TermDismissed', null=True)),
                ('screensbreath', models.IntegerField(blank=True, db_column='ScreensBreath', null=True)),
                ('screenshair', models.IntegerField(blank=True, db_column='ScreensHair', null=True)),
                ('screensurine', models.IntegerField(blank=True, db_column='ScreensUrine', null=True)),
                ('screenstotal', models.IntegerField(blank=True, db_column='ScreensTotal', null=True)),
                ('posscreens', models.IntegerField(blank=True, db_column='PosScreens', null=True)),
                ('posscreensadmit', models.IntegerField(blank=True, db_column='PosScreensAdmit', null=True)),
                ('posscreensdiluted', models.IntegerField(blank=True, db_column='PosScreensDiluted', null=True)),
                ('posscreensnoshow', models.IntegerField(blank=True, db_column='PosScreensNoShow', null=True)),
                ('posscreensnosample', models.IntegerField(blank=True, db_column='PosScreensNoSample', null=True)),
                ('posscreensrefusal', models.IntegerField(blank=True, db_column='PosScreensRefusal', null=True)),
                ('residentialtreatment', models.IntegerField(blank=True, db_column='ResidentialTreatment', null=True)),
                ('substanceabusers', models.IntegerField(blank=True, db_column='SubstanceAbusers', null=True)),
                ('sa_alcohol', models.IntegerField(blank=True, db_column='SA_Alcohol', null=True)),
                ('sa_crack', models.IntegerField(blank=True, db_column='SA_Crack', null=True)),
                ('sa_ecstasy', models.IntegerField(blank=True, db_column='SA_Ecstasy', null=True)),
                ('sa_heroin', models.IntegerField(blank=True, db_column='SA_Heroin', null=True)),
                ('sa_hallucin', models.IntegerField(blank=True, db_column='SA_Hallucin', null=True)),
                ('sa_inhalants', models.IntegerField(blank=True, db_column='SA_Inhalants', null=True)),
                ('sa_marijuana', models.IntegerField(blank=True, db_column='SA_Marijuana', null=True)),
                ('sa_meth', models.IntegerField(blank=True, db_column='SA_Meth', null=True)),
                ('sa_prescriptionnarc', models.IntegerField(blank=True, db_column='SA_PrescriptionNarc', null=True)),
                ('sa_prescriptionother', models.IntegerField(blank=True, db_column='SA_PrescriptionOther', null=True)),
                ('sa_other1', models.IntegerField(blank=True, db_column='SA_Other1', null=True)),
                ('sa_other2', models.IntegerField(blank=True, db_column='SA_Other2', null=True)),
                ('substanceusers', models.IntegerField(blank=True, db_column='SubstanceUsers', null=True)),
                ('su_alcohol', models.IntegerField(blank=True, db_column='SU_Alcohol', null=True)),
                ('su_crack', models.IntegerField(blank=True, db_column='SU_Crack', null=True)),
                ('su_ecstasy', models.IntegerField(blank=True, db_column='SU_Ecstasy', null=True)),
                ('su_heroin', models.IntegerField(blank=True, db_column='SU_Heroin', null=True)),
                ('su_hallucin', models.IntegerField(blank=True, db_column='SU_Hallucin', null=True)),
                ('su_inhalants', models.IntegerField(blank=True, db_column='SU_Inhalants', null=True)),
                ('su_marijuana', models.IntegerField(blank=True, db_column='SU_Marijuana', null=True)),
                ('su_meth', models.IntegerField(blank=True, db_column='SU_Meth', null=True)),
                ('su_prescriptionnarc', models.IntegerField(blank=True, db_column='SU_PrescriptionNarc', null=True)),
                ('su_prescriptionother', models.IntegerField(blank=True, db_column='SU_PrescriptionOther', null=True)),
                ('su_other1', models.IntegerField(blank=True, db_column='SU_Other1', null=True)),
                ('su_other2', models.IntegerField(blank=True, db_column='SU_Other2', null=True)),
                ('asam0_5', models.IntegerField(blank=True, db_column='ASAM0_5', null=True)),
                ('asam1', models.IntegerField(blank=True, db_column='ASAM1', null=True)),
                ('asam2', models.IntegerField(blank=True, db_column='ASAM2', null=True)),
                ('asam2_5', models.IntegerField(blank=True, db_column='ASAM2_5', null=True)),
                ('asam3', models.IntegerField(blank=True, db_column='ASAM3', null=True)),
                ('asam4', models.IntegerField(blank=True, db_column='ASAM4', null=True)),
                ('modrisk', models.IntegerField(blank=True, db_column='ModRisk', null=True)),
                ('highrisk', models.IntegerField(blank=True, db_column='HighRisk', null=True)),
                ('judstatushearings', models.IntegerField(blank=True, db_column='JudStatusHearings', null=True)),
                ('phase1', models.IntegerField(blank=True, db_column='Phase1', null=True)),
                ('phase2', models.IntegerField(blank=True, db_column='Phase2', null=True)),
                ('phase3', models.IntegerField(blank=True, db_column='Phase3', null=True)),
                ('phase4', models.IntegerField(blank=True, db_column='Phase4', null=True)),
                ('phase5', models.IntegerField(blank=True, db_column='Phase5', null=True)),
                ('su_o1name', models.IntegerField(blank=True, db_column='SU_O1Name', null=True)),
                ('su_o2name', models.IntegerField(blank=True, db_column='SU_O2Name', null=True)),
                ('sa_o1name', models.IntegerField(blank=True, db_column='SA_O1Name', null=True)),
                ('sa_o2name', models.IntegerField(blank=True, db_column='SA_O2Name', null=True)),
                ('rejected1', models.IntegerField(blank=True, db_column='Rejected1', null=True)),
                ('graduated', models.IntegerField(blank=True, db_column='Graduated', null=True)),
                ('datastart', models.DateField(blank=True, db_column='DataStart', null=True)),
                ('dataend', models.DateField(blank=True, db_column='DataEnd', null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('acceptedprobrev', models.IntegerField(blank=True, db_column='AcceptedProbRev', null=True)),
                ('rejected1descrip', models.CharField(blank=True, db_column='Rejected1Descrip', max_length=25, null=True)),
                ('rejected2descrip', models.CharField(blank=True, db_column='Rejected2Descrip', max_length=25, null=True)),
                ('rejected3descrip', models.CharField(blank=True, db_column='Rejected3Descrip', max_length=25, null=True)),
                ('rejected4descrip', models.CharField(blank=True, db_column='Rejected4Descrip', max_length=25, null=True)),
            ],
            options={
                'db_table': 'GenInfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Housing',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('housingname', models.CharField(blank=True, db_column='HousingName', max_length=75, null=True)),
                ('housingrentamount', models.DecimalField(blank=True, db_column='HousingRentAmount', decimal_places=4, max_digits=19, null=True)),
                ('housingaddress1', models.CharField(blank=True, db_column='HousingAddress1', max_length=50, null=True)),
                ('housingaddress2', models.CharField(blank=True, db_column='HousingAddress2', max_length=50, null=True)),
                ('housingcitystatezip', models.CharField(db_column='HousingCityStateZip', max_length=50)),
            ],
            options={
                'db_table': 'Housing',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Incomeranges',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('incomerange', models.CharField(db_column='IncomeRange', max_length=50)),
            ],
            options={
                'db_table': 'IncomeRanges',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Judges',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('division', models.SmallIntegerField(db_column='Division')),
                ('judgename', models.CharField(db_column='JudgeName', max_length=55)),
                ('judgeemail', models.CharField(blank=True, db_column='JudgeEmail', max_length=75, null=True)),
                ('assistantname', models.CharField(blank=True, db_column='AssistantName', max_length=50, null=True)),
                ('assistantemail', models.CharField(blank=True, db_column='AssistantEmail', max_length=75, null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=12, null=True)),
            ],
            options={
                'db_table': 'Judges',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lsitypes',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('lsitype', models.CharField(blank=True, db_column='LSIType', max_length=25, null=True)),
            ],
            options={
                'db_table': 'LSITypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mentalhealth',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('clientid', models.CharField(db_column='ClientID', max_length=15)),
                ('evaldate', models.DateTimeField(blank=True, db_column='EvalDate', null=True)),
                ('comments', models.TextField(blank=True, db_column='Comments', null=True)),
                ('medications', models.CharField(blank=True, db_column='Medications', max_length=50, null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=25, null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
                ('ssma_timestamp', models.TextField(db_column='SSMA_TimeStamp')),
            ],
            options={
                'db_table': 'MentalHealth',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mhphysicians',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('clientid', models.CharField(db_column='ClientID', max_length=15)),
                ('mhphysicianname', models.CharField(db_column='MHPhysicianName', max_length=50)),
                ('mhfacilityname', models.CharField(blank=True, db_column='MHFacilityName', max_length=50, null=True)),
                ('mhaddress', models.CharField(blank=True, db_column='MHAddress', max_length=50, null=True)),
                ('mhcity', models.CharField(db_column='MHCity', max_length=25)),
                ('mhstate', models.CharField(db_column='MHState', max_length=2)),
                ('mhzip', models.CharField(blank=True, db_column='MHZip', max_length=10, null=True)),
                ('mhphone', models.CharField(blank=True, db_column='MHPhone', max_length=15, null=True)),
                ('mhpdate', models.DateTimeField(blank=True, db_column='MHPDate', null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=25, null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
            ],
            options={
                'db_table': 'MHPhysicians',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Objectives',
            fields=[
                ('objid', models.AutoField(db_column='ObjID', primary_key=True, serialize=False)),
                ('clientobjnum', models.IntegerField(blank=True, db_column='ClientObjNum', null=True)),
                ('clientid', models.CharField(blank=True, db_column='ClientID', max_length=15, null=True)),
                ('obj', models.CharField(blank=True, db_column='Obj', max_length=150, null=True)),
                ('objtarget', models.DateTimeField(blank=True, db_column='ObjTarget', null=True)),
                ('intervention1', models.CharField(blank=True, db_column='Intervention1', max_length=150, null=True)),
                ('intervention2', models.CharField(blank=True, db_column='Intervention2', max_length=150, null=True)),
                ('closed', models.BooleanField(db_column='Closed')),
                ('met', models.BooleanField(db_column='Met')),
                ('metdate', models.DateTimeField(blank=True, db_column='MetDate', null=True)),
                ('rating', models.CharField(blank=True, db_column='Rating', max_length=1, null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=25, null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
                ('ssma_timestamp', models.TextField(db_column='SSMA_TimeStamp')),
                ('objtype', models.CharField(blank=True, db_column='ObjType', max_length=15, null=True)),
            ],
            options={
                'db_table': 'Objectives',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Outreach',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('clientid', models.CharField(db_column='ClientID', max_length=15)),
                ('outreachdate', models.CharField(db_column='OutreachDate', max_length=50)),
                ('outreachhours', models.SmallIntegerField(db_column='OutreachHours')),
                ('outreachdescription', models.CharField(db_column='OutreachDescription', max_length=50)),
                ('outreachverifiedby', models.CharField(blank=True, db_column='OutreachVerifiedBy', max_length=50, null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=15, null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=25, null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
            ],
            options={
                'db_table': 'Outreach',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Phases',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('phase', models.CharField(db_column='Phase', max_length=10)),
                ('track', models.CharField(blank=True, db_column='Track', max_length=2, null=True)),
                ('site', models.CharField(blank=True, db_column='Site', max_length=50, null=True)),
                ('screensperweek', models.IntegerField(blank=True, db_column='ScreensPerWeek', null=True)),
                ('stepsessionsperweek', models.IntegerField(blank=True, db_column='StepSessionsPerWeek', null=True)),
                ('meetingsperweek', models.IntegerField(blank=True, db_column='MeetingsPerWeek', null=True)),
                ('courtperiod', models.CharField(blank=True, db_column='CourtPeriod', max_length=15, null=True)),
                ('txsessionsperperiod', models.IntegerField(blank=True, db_column='TxSessionsPerPeriod', null=True)),
                ('txsessionhrs', models.FloatField(blank=True, db_column='TxSessionHrs', null=True)),
                ('step', models.IntegerField(blank=True, db_column='Step', null=True)),
                ('other', models.IntegerField(blank=True, db_column='Other', null=True)),
                ('minphasedays', models.IntegerField(blank=True, db_column='MinPhaseDays', null=True)),
                ('casereviewfreq', models.CharField(blank=True, db_column='CaseReviewFreq', max_length=15, null=True)),
                ('weeklyfees', models.DecimalField(blank=True, db_column='WeeklyFees', decimal_places=4, max_digits=19, null=True)),
                ('cumfees', models.DecimalField(blank=True, db_column='CumFees', decimal_places=4, max_digits=19, null=True)),
                ('employmenthrs', models.IntegerField(blank=True, db_column='EmploymentHrs', null=True)),
                ('courtdateday', models.IntegerField(blank=True, db_column='CourtDateDay', null=True)),
                ('grpnotes', models.IntegerField(blank=True, db_column='GrpNotes', null=True)),
                ('grpnotefreq', models.CharField(blank=True, db_column='GrpNoteFreq', max_length=15, null=True)),
                ('indsession', models.IntegerField(blank=True, db_column='IndSession', null=True)),
                ('feebalancealert', models.DecimalField(blank=True, db_column='FeeBalanceAlert', decimal_places=4, max_digits=19, null=True)),
                ('courtfreqency', models.CharField(blank=True, db_column='CourtFreqency', max_length=15, null=True)),
                ('minimumdays', models.IntegerField(blank=True, db_column='MinimumDays', null=True)),
                ('casereview', models.CharField(blank=True, db_column='CaseReview', max_length=15, null=True)),
                ('fees', models.DecimalField(blank=True, db_column='Fees', decimal_places=4, max_digits=19, null=True)),
                ('ssma_timestamp', models.TextField(db_column='SSMA_TimeStamp')),
            ],
            options={
                'db_table': 'Phases',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Physicians',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('clientid', models.CharField(db_column='ClientID', max_length=15)),
                ('physicianname', models.CharField(blank=True, db_column='PhysicianName', max_length=50, null=True)),
                ('facilityname', models.CharField(blank=True, db_column='FacilityName', max_length=50, null=True)),
                ('physicianaddress', models.CharField(blank=True, db_column='PhysicianAddress', max_length=50, null=True)),
                ('physiciancity', models.CharField(blank=True, db_column='PhysicianCity', max_length=50, null=True)),
                ('physicianstate', models.CharField(blank=True, db_column='PhysicianState', max_length=2, null=True)),
                ('physicianzip', models.CharField(blank=True, db_column='PhysicianZip', max_length=10, null=True)),
                ('physicianphone', models.CharField(blank=True, db_column='PhysicianPhone', max_length=50, null=True)),
                ('physiciandates', models.CharField(blank=True, db_column='PhysicianDates', max_length=50, null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=25, null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
            ],
            options={
                'db_table': 'Physicians',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Positivetypes',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='Description', max_length=50)),
                ('column2', models.CharField(blank=True, db_column='Column2', max_length=15, null=True)),
            ],
            options={
                'db_table': 'PositiveTypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Priortx',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('clientid', models.CharField(db_column='ClientID', max_length=15)),
                ('type', models.CharField(db_column='Type', max_length=30)),
                ('description', models.CharField(db_column='Description', max_length=30)),
                ('provider', models.CharField(blank=True, db_column='Provider', max_length=50, null=True)),
                ('provideraddress', models.CharField(blank=True, db_column='ProviderAddress', max_length=60, null=True)),
                ('providercity', models.CharField(blank=True, db_column='ProviderCity', max_length=50, null=True)),
                ('providerstate', models.CharField(blank=True, db_column='ProviderState', max_length=2, null=True)),
                ('providerzip', models.CharField(blank=True, db_column='ProviderZip', max_length=10, null=True)),
                ('providerphone', models.CharField(blank=True, db_column='ProviderPhone', max_length=15, null=True)),
                ('enddate', models.DateTimeField(blank=True, db_column='EndDate', null=True)),
                ('outcome', models.CharField(blank=True, db_column='Outcome', max_length=100, null=True)),
                ('yearssober', models.IntegerField(blank=True, db_column='YearsSober', null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=25, null=True)),
            ],
            options={
                'db_table': 'PriorTx',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Probgoals',
            fields=[
                ('probgoalid', models.AutoField(db_column='ProbGoalID', primary_key=True, serialize=False)),
                ('clientid', models.CharField(db_column='ClientID', max_length=15)),
                ('disciplineid', models.IntegerField(db_column='DisciplineID')),
                ('probgoalnum', models.IntegerField(db_column='ProbGoalNum')),
                ('prob', models.CharField(db_column='Prob', max_length=100)),
                ('goal', models.CharField(db_column='Goal', max_length=150)),
                ('probgoaltarget', models.DateTimeField(db_column='ProbGoalTarget')),
                ('probgoaltype', models.CharField(db_column='ProbGoalType', max_length=15)),
                ('probgoalstatus', models.CharField(db_column='ProbGoalStatus', max_length=20)),
                ('resolveddate', models.DateTimeField(blank=True, db_column='ResolvedDate', null=True)),
                ('deferreddate', models.DateTimeField(blank=True, db_column='DeferredDate', null=True)),
                ('closeddate', models.DateTimeField(blank=True, db_column='ClosedDate', null=True)),
                ('lsir', models.CharField(blank=True, db_column='LSIR', max_length=50, null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=25, null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
            ],
            options={
                'db_table': 'ProbGoals',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Proposals',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('clientid', models.CharField(db_column='ClientID', max_length=15)),
                ('proposaltype', models.CharField(db_column='ProposalType', max_length=15)),
                ('proposaldate', models.DateField(db_column='ProposalDate')),
                ('passstart', models.CharField(blank=True, db_column='PassStart', max_length=10, null=True)),
                ('passend', models.CharField(blank=True, db_column='PassEnd', max_length=10, null=True)),
                ('proposaldescription', models.CharField(blank=True, db_column='ProposalDescription', max_length=255, null=True)),
                ('proposalstatus', models.CharField(blank=True, db_column='ProposalStatus', max_length=15, null=True)),
                ('proposalcomment', models.CharField(blank=True, db_column='ProposalComment', max_length=255, null=True)),
                ('laststatusdate', models.DateField(blank=True, db_column='LastStatusDate', null=True)),
                ('approver', models.CharField(blank=True, db_column='Approver', max_length=25, null=True)),
                ('approvedate', models.DateField(blank=True, db_column='ApproveDate', null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=25, null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
                ('passdate', models.DateField(blank=True, db_column='Passdate', null=True)),
            ],
            options={
                'db_table': 'Proposals',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('racetitle', models.CharField(blank=True, db_column='RaceTitle', max_length=35, null=True)),
            ],
            options={
                'db_table': 'Race',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ratinghistory',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('clientid', models.CharField(db_column='ClientID', max_length=15)),
                ('ratingdate', models.DateTimeField(blank=True, db_column='RatingDate', null=True)),
                ('probgoalid', models.IntegerField(blank=True, db_column='ProbGoalID', null=True)),
                ('objid', models.IntegerField(blank=True, db_column='ObjID', null=True)),
                ('sort', models.IntegerField(blank=True, db_column='Sort', null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=150, null=True)),
                ('crating', models.CharField(blank=True, db_column='CRating', max_length=1, null=True)),
                ('prating', models.CharField(blank=True, db_column='PRating', max_length=1, null=True)),
                ('rater', models.CharField(blank=True, db_column='Rater', max_length=25, null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
                ('problemid', models.IntegerField(blank=True, db_column='ProblemID', null=True)),
                ('objectiveid', models.IntegerField(blank=True, db_column='ObjectiveID', null=True)),
                ('currentphase', models.CharField(blank=True, db_column='CurrentPhase', max_length=2, null=True)),
                ('phasedays', models.IntegerField(blank=True, db_column='PhaseDays', null=True)),
                ('nextratingdate', models.DateTimeField(blank=True, db_column='NextRatingDate', null=True)),
            ],
            options={
                'db_table': 'RatingHistory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Referrals',
            fields=[
                ('refid', models.AutoField(db_column='RefID', primary_key=True, serialize=False)),
                ('clientid', models.CharField(db_column='ClientID', max_length=15, unique=True)),
                ('casenums', models.CharField(blank=True, db_column='CaseNums', max_length=255, null=True)),
                ('charges', models.CharField(blank=True, db_column='Charges', max_length=100, null=True)),
                ('spn', models.CharField(blank=True, db_column='SPN', max_length=8, null=True)),
                ('stateid', models.CharField(blank=True, db_column='StateID', max_length=15, null=True)),
                ('lastname', models.CharField(blank=True, db_column='LastName', max_length=20, null=True)),
                ('firstname', models.CharField(blank=True, db_column='FirstName', max_length=20, null=True)),
                ('middlename', models.CharField(blank=True, db_column='MiddleName', max_length=20, null=True)),
                ('ssn', models.CharField(blank=True, db_column='SSN', max_length=11, null=True)),
                ('track', models.CharField(db_column='Track', max_length=1)),
                ('enrolldate', models.DateField(blank=True, db_column='EnrollDate', null=True)),
                ('rejectreason', models.CharField(blank=True, db_column='RejectReason', max_length=50, null=True)),
                ('dob', models.DateField(blank=True, db_column='DOB', null=True)),
                ('race', models.CharField(blank=True, db_column='Race', max_length=35, null=True)),
                ('sex', models.CharField(blank=True, db_column='Sex', max_length=1, null=True)),
                ('status', models.CharField(db_column='Status', max_length=50)),
                ('division', models.IntegerField(blank=True, db_column='Division', null=True)),
                ('location', models.CharField(blank=True, db_column='Location', max_length=10, null=True)),
                ('cell', models.CharField(blank=True, db_column='Cell', max_length=10, null=True)),
                ('referredby', models.CharField(blank=True, db_column='ReferredBy', max_length=50, null=True)),
                ('referreddate', models.DateField(blank=True, db_column='ReferredDate', null=True)),
                ('pretrialname', models.CharField(blank=True, db_column='PretrialName', max_length=50, null=True)),
                ('pretrialreceived', models.DateField(blank=True, db_column='PretrialReceived', null=True)),
                ('pretrialcompleted', models.DateField(blank=True, db_column='PretrialCompleted', null=True)),
                ('pretrialdecision', models.CharField(blank=True, db_column='PretrialDecision', max_length=10, null=True)),
                ('defensename', models.CharField(blank=True, db_column='DefenseName', max_length=50, null=True)),
                ('defensereceived', models.DateField(blank=True, db_column='DefenseReceived', null=True)),
                ('defensecompleted', models.DateField(blank=True, db_column='DefenseCompleted', null=True)),
                ('defensedecision', models.CharField(blank=True, db_column='DefenseDecision', max_length=10, null=True)),
                ('daname', models.CharField(blank=True, db_column='DAName', max_length=50, null=True)),
                ('dareceived', models.DateField(blank=True, db_column='DAReceived', null=True)),
                ('dacompleted', models.DateField(blank=True, db_column='DACompleted', null=True)),
                ('dadecision', models.CharField(blank=True, db_column='DADecision', max_length=10, null=True)),
                ('assessname', models.CharField(blank=True, db_column='AssessName', max_length=50, null=True)),
                ('assessreceived', models.DateField(blank=True, db_column='AssessReceived', null=True)),
                ('assesscompleted', models.DateField(blank=True, db_column='AssessCompleted', null=True)),
                ('teamreceived', models.DateField(blank=True, db_column='TeamReceived', null=True)),
                ('teamcompleted', models.DateField(blank=True, db_column='TeamCompleted', null=True)),
                ('teamdecision', models.CharField(blank=True, db_column='TeamDecision', max_length=10, null=True)),
                ('arrests', models.IntegerField(blank=True, db_column='Arrests', null=True)),
                ('felonies', models.IntegerField(blank=True, db_column='Felonies', null=True)),
                ('misdemeanors', models.IntegerField(blank=True, db_column='Misdemeanors', null=True)),
                ('firstarrestyear', models.IntegerField(blank=True, db_column='FirstArrestYear', null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=50, null=True)),
                ('accepteddate', models.DateField(blank=True, db_column='AcceptedDate', null=True)),
                ('county', models.CharField(blank=True, db_column='County', max_length=50, null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=25, null=True)),
                ('termreason', models.CharField(blank=True, db_column='TermReason', max_length=25, null=True)),
            ],
            options={
                'db_table': 'Referrals',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rejectreasons',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('rejectreason', models.CharField(blank=True, db_column='RejectReason', max_length=50, null=True)),
                ('sort', models.IntegerField(blank=True, db_column='Sort', null=True)),
            ],
            options={
                'db_table': 'RejectReasons',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rewards',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('rewarddate', models.DateTimeField(blank=True, db_column='RewardDate', null=True)),
                ('rewarddescription', models.CharField(blank=True, db_column='RewardDescription', max_length=50, null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=25, null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
                ('clientid', models.CharField(blank=True, db_column='ClientID', max_length=50, null=True)),
            ],
            options={
                'db_table': 'Rewards',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sanctionlevels',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('sanctionlevel', models.CharField(db_column='SanctionLevel', max_length=50)),
            ],
            options={
                'db_table': 'SanctionLevels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sanctions',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('clientid', models.CharField(db_column='ClientID', max_length=15)),
                ('sanctionlevel', models.CharField(db_column='SanctionLevel', max_length=50)),
                ('sanctiondate', models.DateTimeField(blank=True, db_column='SanctionDate', null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=255, null=True)),
                ('daysinjail', models.SmallIntegerField(blank=True, db_column='DaysInJail', null=True)),
                ('datejailstart', models.DateTimeField(blank=True, db_column='DateJailStart', null=True)),
                ('datejailend', models.DateTimeField(blank=True, db_column='DateJailEnd', null=True)),
                ('csprovider', models.CharField(blank=True, db_column='CSProvider', max_length=50, null=True)),
                ('csdate', models.CharField(blank=True, db_column='CSDate', max_length=50, null=True)),
                ('cshoursrequired', models.SmallIntegerField(blank=True, db_column='CSHoursRequired', null=True)),
                ('cshourscompleted', models.SmallIntegerField(blank=True, db_column='CSHoursCompleted', null=True)),
                ('csverifiedby', models.CharField(blank=True, db_column='CSVerifiedBy', max_length=55, null=True)),
                ('complete', models.BooleanField(blank=True, db_column='Complete', null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=25, null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
                ('level4complete', models.BooleanField(db_column='Level4Complete')),
                ('ssma_timestamp', models.TextField(db_column='SSMA_TimeStamp')),
            ],
            options={
                'db_table': 'Sanctions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Screensimport',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('accession', models.IntegerField(blank=True, db_column='Accession', null=True)),
                ('clientid', models.CharField(blank=True, db_column='ClientID', max_length=50, null=True)),
                ('collectdate', models.DateTimeField(blank=True, db_column='CollectDate', null=True)),
                ('testdate', models.DateTimeField(blank=True, db_column='TestDate', null=True)),
                ('result', models.CharField(blank=True, db_column='Result', max_length=255, null=True)),
                ('drugsfound', models.CharField(blank=True, db_column='Drugsfound', max_length=255, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=255, null=True)),
                ('agency', models.CharField(blank=True, db_column='Agency', max_length=255, null=True)),
            ],
            options={
                'db_table': 'ScreensImport',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Screenslab',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('clientid', models.CharField(db_column='ClientID', max_length=15)),
                ('agency', models.CharField(blank=True, db_column='Agency', max_length=50, null=True)),
                ('accession', models.IntegerField(db_column='Accession')),
                ('collectdate', models.DateTimeField(blank=True, db_column='CollectDate', null=True)),
                ('testdate', models.DateTimeField(blank=True, db_column='TestDate', null=True)),
                ('result', models.CharField(blank=True, db_column='Result', max_length=255, null=True)),
                ('resultconfirmed', models.BooleanField(db_column='ResultConfirmed')),
                ('positiveapproved', models.BooleanField(db_column='PositiveApproved')),
                ('drugsfound', models.CharField(blank=True, db_column='DrugsFound', max_length=255, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=255, null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
                ('ssma_timestamp', models.TextField(db_column='SSMA_TimeStamp')),
                ('positivetype', models.CharField(blank=True, db_column='PositiveType', max_length=25, null=True)),
            ],
            options={
                'db_table': 'ScreensLab',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Screensother',
            fields=[
                ('clientid', models.CharField(db_column='ClientID', max_length=15)),
                ('collectdate', models.DateTimeField(db_column='CollectDate')),
                ('result', models.CharField(blank=True, db_column='Result', max_length=25, null=True)),
                ('resultconfirmed', models.BooleanField(blank=True, db_column='ResultConfirmed', null=True)),
                ('positiveapproved', models.BooleanField(db_column='PositiveApproved')),
                ('noshow', models.BooleanField(db_column='NoShow')),
                ('drugsfound', models.CharField(blank=True, db_column='DrugsFound', max_length=100, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=255, null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=25, null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('ssma_timestamp', models.TextField(db_column='SSMA_TimeStamp')),
                ('refusal', models.BooleanField(blank=True, db_column='Refusal', null=True)),
                ('diluted', models.BooleanField(blank=True, db_column='Diluted', null=True)),
                ('admitted', models.BooleanField(blank=True, db_column='Admitted', null=True)),
                ('positivetype', models.CharField(blank=True, db_column='PositiveType', max_length=50, null=True)),
            ],
            options={
                'db_table': 'ScreensOther',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('statusmsg', models.CharField(blank=True, db_column='StatusMsg', max_length=25, null=True)),
                ('msgtype', models.CharField(blank=True, db_column='MsgType', max_length=10, null=True)),
            ],
            options={
                'db_table': 'Status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Stepattendance',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('clientid', models.CharField(db_column='ClientID', max_length=15)),
                ('weekstart', models.DateField(blank=True, db_column='WeekStart', null=True)),
                ('attended', models.IntegerField(blank=True, db_column='Attended', null=True)),
                ('comment', models.CharField(blank=True, db_column='Comment', max_length=255, null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=25, null=True)),
                ('modified', models.DateTimeField(blank=True, db_column='Modified', null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
                ('required', models.IntegerField(blank=True, db_column='Required', null=True)),
            ],
            options={
                'db_table': 'StepAttendance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Substanceuse',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('clientid', models.CharField(db_column='ClientID', max_length=15)),
                ('aod', models.CharField(blank=True, db_column='AOD', max_length=20, null=True)),
                ('route', models.CharField(blank=True, db_column='Route', max_length=15, null=True)),
                ('frequency', models.CharField(blank=True, db_column='Frequency', max_length=15, null=True)),
                ('agebegan', models.IntegerField(blank=True, db_column='AgeBegan', null=True)),
                ('lastuse', models.CharField(blank=True, db_column='LastUse', max_length=15, null=True)),
                ('comments', models.CharField(blank=True, db_column='Comments', max_length=250, null=True)),
                ('usebyfamily', models.BooleanField(db_column='UseByFamily')),
                ('usebypartner', models.BooleanField(db_column='UseByPartner')),
                ('currentlyused', models.BooleanField(db_column='CurrentlyUsed')),
                ('costperweek', models.DecimalField(blank=True, db_column='CostPerWeek', decimal_places=4, max_digits=19, null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=25, null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
                ('ssma_timestamp', models.TextField(db_column='SSMA_TimeStamp')),
            ],
            options={
                'db_table': 'SubstanceUse',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tempnote',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('tempnote', models.TextField(blank=True, db_column='TempNote', null=True)),
                ('notedate', models.DateTimeField(blank=True, db_column='NoteDate', null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=25, null=True)),
                ('ssma_timestamp', models.TextField(db_column='SSMA_TimeStamp')),
                ('createdate', models.DateTimeField(blank=True, db_column='CreateDate', null=True)),
            ],
            options={
                'db_table': 'TempNote',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Temprating',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('clientid', models.CharField(db_column='ClientID', max_length=15)),
                ('ratingdate', models.DateTimeField(blank=True, db_column='RatingDate', null=True)),
                ('probgoalid', models.IntegerField(db_column='ProbGoalID')),
                ('objid', models.IntegerField(blank=True, db_column='ObjID', null=True)),
                ('sort', models.IntegerField(blank=True, db_column='Sort', null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=150, null=True)),
                ('crating', models.CharField(blank=True, db_column='CRating', max_length=1, null=True)),
                ('prating', models.CharField(blank=True, db_column='PRating', max_length=1, null=True)),
                ('rater', models.CharField(blank=True, db_column='Rater', max_length=25, null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
            ],
            options={
                'db_table': 'TempRating',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Temptxattendance',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=50, null=True)),
                ('sessiondate', models.DateTimeField(blank=True, db_column='SessionDate', null=True)),
                ('aaorna', models.BooleanField(blank=True, db_column='AAorNA', null=True)),
                ('attendance', models.BooleanField(blank=True, db_column='Attendance', null=True)),
                ('attendancecomments', models.CharField(blank=True, db_column='AttendanceComments', max_length=255, null=True)),
                ('reason', models.CharField(blank=True, db_column='Reason', max_length=10, null=True)),
                ('txid', models.IntegerField(blank=True, db_column='TxID', null=True)),
                ('clientid', models.CharField(db_column='ClientID', max_length=15)),
                ('timein', models.CharField(blank=True, db_column='TimeIn', max_length=11, null=True)),
                ('timeout', models.CharField(blank=True, db_column='Timeout', max_length=11, null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=25, null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
                ('ssma_timestamp', models.TextField(db_column='SSMA_TimeStamp')),
            ],
            options={
                'db_table': 'TempTxAttendance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Temptxnotes',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('clientid', models.CharField(db_column='ClientID', max_length=15)),
                ('lfname', models.CharField(blank=True, db_column='LFName', max_length=50, null=True)),
                ('note', models.TextField(blank=True, db_column='Note', null=True)),
                ('notetype', models.CharField(blank=True, db_column='NoteType', max_length=15, null=True)),
                ('notedate', models.DateTimeField(blank=True, db_column='NoteDate', null=True)),
                ('probgoalnum', models.CharField(blank=True, db_column='ProbGoalNum', max_length=50, null=True)),
                ('timein', models.CharField(blank=True, db_column='TimeIn', max_length=11, null=True)),
                ('timeout', models.CharField(blank=True, db_column='TimeOut', max_length=11, null=True)),
                ('reason', models.CharField(blank=True, db_column='Reason', max_length=11, null=True)),
                ('nrd', models.DateTimeField(blank=True, db_column='NRD', null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=25, null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
                ('ssma_timestamp', models.TextField(db_column='SSMA_TimeStamp')),
            ],
            options={
                'db_table': 'TempTxNotes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Txattendance',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('clientid', models.CharField(db_column='ClientID', max_length=15)),
                ('sessiondate', models.DateTimeField(db_column='SessionDate')),
                ('attendedyn', models.BooleanField(blank=True, db_column='AttendedYN', null=True)),
                ('nonattendreason', models.CharField(blank=True, db_column='NonAttendReason', max_length=10, null=True)),
                ('timein', models.CharField(blank=True, db_column='TimeIn', max_length=11, null=True)),
                ('timeout', models.CharField(blank=True, db_column='TimeOut', max_length=11, null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=25, null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
                ('ssma_timestamp', models.TextField(db_column='SSMA_TimeStamp')),
            ],
            options={
                'db_table': 'TxAttendance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Txnotes',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('clientid', models.CharField(db_column='ClientID', max_length=15)),
                ('note', models.TextField(db_column='Note')),
                ('notetype', models.CharField(db_column='NoteType', max_length=15)),
                ('notedate', models.DateTimeField(db_column='NoteDate')),
                ('probgoalnum', models.CharField(blank=True, db_column='ProbGoalNum', max_length=50, null=True)),
                ('timein', models.CharField(blank=True, db_column='TimeIn', max_length=11, null=True)),
                ('timeout', models.CharField(blank=True, db_column='TimeOut', max_length=11, null=True)),
                ('reason', models.CharField(blank=True, db_column='Reason', max_length=10, null=True)),
                ('nrd', models.DateTimeField(blank=True, db_column='NRD', null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=25, null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
                ('ssma_timestamp', models.TextField(db_column='SSMA_TimeStamp')),
                ('notetoclient', models.TextField(blank=True, db_column='NoteToClient', null=True)),
                ('phase', models.CharField(blank=True, db_column='Phase', max_length=1, null=True)),
                ('discipline', models.CharField(blank=True, db_column='Discipline', max_length=15, null=True)),
            ],
            options={
                'db_table': 'TxNotes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userinfo',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('userid', models.CharField(db_column='UserID', max_length=25)),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=55, null=True)),
                ('roleid', models.IntegerField(db_column='RoleID')),
                ('useremail', models.CharField(blank=True, db_column='UserEmail', max_length=75, null=True)),
                ('userphone', models.CharField(blank=True, db_column='UserPhone', max_length=15, null=True)),
                ('active', models.BooleanField(blank=True, db_column='Active', null=True)),
                ('defaulttrack', models.CharField(blank=True, db_column='DefaultTrack', max_length=1, null=True)),
                ('created', models.DateTimeField(blank=True, db_column='Created', null=True)),
                ('ssma_timestamp', models.TextField(db_column='SSMA_TimeStamp')),
            ],
            options={
                'db_table': 'UserInfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userlogininfo',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=25, null=True)),
                ('ip', models.CharField(blank=True, db_column='IP', max_length=20, null=True)),
                ('startsession', models.DateTimeField(blank=True, db_column='StartSession', null=True)),
                ('finishsession', models.DateTimeField(blank=True, db_column='FinishSession', null=True)),
            ],
            options={
                'db_table': 'UserLoginInfo',
                'managed': False,
            },
        ),
    ]
